// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220128154640_Fix01")]
    partial class Fix01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Courier", b =>
                {
                    b.Property<Guid>("CourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourierName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelDimensionCmMax")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelDimensionCmMin")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightKgMax")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightKgMin")
                        .HasColumnType("TEXT");

                    b.HasKey("CourierId");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("Domain.Package", b =>
                {
                    b.Property<Guid>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourierId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageDepth")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageHeight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageWeight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageWidth")
                        .HasColumnType("TEXT");

                    b.HasKey("PackageId");

                    b.HasIndex("CourierId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Domain.ParcelDimensionsPricing", b =>
                {
                    b.Property<Guid>("ParcelDimensionsPricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourierId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelDimensionsCmFrom")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelDimensionsCmTo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelDimensionsPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ParcelDimensionsPricingId");

                    b.HasIndex("CourierId");

                    b.ToTable("ParcelDimensionsPricing");
                });

            modelBuilder.Entity("Domain.ParcelWeightPricing", b =>
                {
                    b.Property<Guid>("ParcelWeightPricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourierId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelKgPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightIsAddKgPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightKgFrom")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightKgTo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParcelWeightPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ParcelWeightPricingId");

                    b.HasIndex("CourierId");

                    b.ToTable("ParcelWeightPricing");
                });

            modelBuilder.Entity("Domain.Package", b =>
                {
                    b.HasOne("Domain.Courier", "Courier")
                        .WithMany("Package")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("Domain.ParcelDimensionsPricing", b =>
                {
                    b.HasOne("Domain.Courier", "Courier")
                        .WithMany("ParcelDimensionsPricing")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("Domain.ParcelWeightPricing", b =>
                {
                    b.HasOne("Domain.Courier", "Courier")
                        .WithMany("ParcelWeightPricing")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("Domain.Courier", b =>
                {
                    b.Navigation("Package");

                    b.Navigation("ParcelDimensionsPricing");

                    b.Navigation("ParcelWeightPricing");
                });
#pragma warning restore 612, 618
        }
    }
}
